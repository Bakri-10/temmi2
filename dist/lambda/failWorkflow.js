"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cchLambdaLogger_js_1 = require("./cchLambdaLogger.js");
var cchLambdaLogger;
exports.handler = (event, context, callback) => {
    cchLambdaLogger = new cchLambdaLogger_js_1.CCHLambdaLogger(process.env.STAGE_PREFIX, process.env.REGION, process.env.ACCOUNT, process.env.CCH_VERSION, context, process.env.KINESIS_ENABLED, event.payload.params.customer.customerPrefix, event.payload.params.customer.zone, '', '', event.payload.params.custom.FCCH.FCCH_Execution, event.payload.params.custom.FCCH.FCCH_Input['producer-id']);
    cchLambdaLogger.log("Inside failWorkflow lambda", event);
    function TORError(event) {
        this.name = event.payload.error.Error;
        this.message = event.payload.error.Cause;
    }
    TORError.prototype = new Error();
    const error = new TORError(event);
    cchLambdaLogger.error(error);
    callback(error);
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmFpbFdvcmtmbG93LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vbGFtYmRhL2ZhaWxXb3JrZmxvdy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZEQUF1RDtBQUV2RCxJQUFJLGVBQWUsQ0FBQztBQUNwQixPQUFPLENBQUMsT0FBTyxHQUFHLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLEVBQUUsRUFBRTtJQUUzQyxlQUFlLEdBQUcsSUFBSSxvQ0FBZSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUNuRyxPQUFPLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxPQUFPLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLGNBQWMsRUFDM0csS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7SUFFN0osZUFBZSxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN6RCxTQUFTLFFBQVEsQ0FBQyxLQUFLO1FBQ25CLElBQUksQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO1FBQ3RDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQzdDLENBQUM7SUFDRCxRQUFRLENBQUMsU0FBUyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7SUFDakMsTUFBTSxLQUFLLEdBQUcsSUFBSSxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsZUFBZSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3QixRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDcEIsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ0NITGFtYmRhTG9nZ2VyIH0gZnJvbSBcIi4vY2NoTGFtYmRhTG9nZ2VyLmpzXCI7XG5cbnZhciBjY2hMYW1iZGFMb2dnZXI7XG5leHBvcnRzLmhhbmRsZXIgPSAoZXZlbnQsIGNvbnRleHQsIGNhbGxiYWNrKSA9PiB7XG5cbiAgICBjY2hMYW1iZGFMb2dnZXIgPSBuZXcgQ0NITGFtYmRhTG9nZ2VyKHByb2Nlc3MuZW52LlNUQUdFX1BSRUZJWCwgcHJvY2Vzcy5lbnYuUkVHSU9OLCBwcm9jZXNzLmVudi5BQ0NPVU5ULCBcbiAgICAgICAgcHJvY2Vzcy5lbnYuQ0NIX1ZFUlNJT04sIGNvbnRleHQsIHByb2Nlc3MuZW52LktJTkVTSVNfRU5BQkxFRCwgZXZlbnQucGF5bG9hZC5wYXJhbXMuY3VzdG9tZXIuY3VzdG9tZXJQcmVmaXgsIFxuICAgICAgICBldmVudC5wYXlsb2FkLnBhcmFtcy5jdXN0b21lci56b25lLCAnJywgJycsIGV2ZW50LnBheWxvYWQucGFyYW1zLmN1c3RvbS5GQ0NILkZDQ0hfRXhlY3V0aW9uLCBldmVudC5wYXlsb2FkLnBhcmFtcy5jdXN0b20uRkNDSC5GQ0NIX0lucHV0Wydwcm9kdWNlci1pZCddKTtcbiAgICBcbiAgICBjY2hMYW1iZGFMb2dnZXIubG9nKFwiSW5zaWRlIGZhaWxXb3JrZmxvdyBsYW1iZGFcIiwgZXZlbnQpO1xuICAgIGZ1bmN0aW9uIFRPUkVycm9yKGV2ZW50KSB7XG4gICAgICAgIHRoaXMubmFtZSA9IGV2ZW50LnBheWxvYWQuZXJyb3IuRXJyb3I7XG4gICAgICAgIHRoaXMubWVzc2FnZSA9IGV2ZW50LnBheWxvYWQuZXJyb3IuQ2F1c2U7XG4gICAgfVxuICAgIFRPUkVycm9yLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuICAgIGNvbnN0IGVycm9yID0gbmV3IFRPUkVycm9yKGV2ZW50KTtcbiAgICBjY2hMYW1iZGFMb2dnZXIuZXJyb3IoZXJyb3IpO1xuICAgIGNhbGxiYWNrKGVycm9yKTtcbn07Il19