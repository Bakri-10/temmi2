"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const cchLambdaLogger_js_1 = require("./cchLambdaLogger.js");
var cchLambdaLogger;
exports.handler = function getSize(event, context, callback) {
    cchLambdaLogger = new cchLambdaLogger_js_1.CCHLambdaLogger(process.env.STAGE_PREFIX, process.env.REGION, process.env.ACCOUNT, process.env.CCH_VERSION, context, process.env.KINESIS_ENABLED, event.input.customer.customerPrefix, event.input.customer.zone, '', '', event.input.custom.FCCH.FCCH_Execution, event.input.custom.FCCH.FCCH_Input['producer-id']);
    cchLambdaLogger.log("Inside getSize lambda", event);
    const _data = event.data;
    const _count = _data.stages.length;
    cchLambdaLogger.log("count", _count);
    const _message = `Stage 1 of ${_count}. Stage: ${_data.stages[0].stage}`;
    callback(null, {
        current_stage: _message,
        count: _count,
        index: 0,
        step: 1
    });
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U2l6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL2xhbWJkYS9nZXRTaXplLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkRBQXVEO0FBRXZELElBQUksZUFBZSxDQUFDO0FBQ3BCLE9BQU8sQ0FBQyxPQUFPLEdBQUcsU0FBUyxPQUFPLENBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRO0lBRXhELGVBQWUsR0FBRyxJQUFJLG9DQUFlLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQ25HLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLE9BQU8sRUFBRSxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBRSxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxjQUFjLEVBQ2xHLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO0lBRWxJLGVBQWUsQ0FBQyxHQUFHLENBQUMsdUJBQXVCLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFFcEQsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztJQUV6QixNQUFNLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztJQUNuQyxlQUFlLENBQUMsR0FBRyxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNyQyxNQUFNLFFBQVEsR0FBRyxjQUFjLE1BQU0sWUFBWSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFBO0lBRXhFLFFBQVEsQ0FBQyxJQUFJLEVBQUU7UUFDWCxhQUFhLEVBQUUsUUFBUTtRQUN2QixLQUFLLEVBQUUsTUFBTTtRQUNiLEtBQUssRUFBRSxDQUFDO1FBQ1IsSUFBSSxFQUFFLENBQUM7S0FDVixDQUFDLENBQUE7QUFDSixDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDQ0hMYW1iZGFMb2dnZXIgfSBmcm9tIFwiLi9jY2hMYW1iZGFMb2dnZXIuanNcIjtcblxudmFyIGNjaExhbWJkYUxvZ2dlcjtcbmV4cG9ydHMuaGFuZGxlciA9IGZ1bmN0aW9uIGdldFNpemUgKGV2ZW50LCBjb250ZXh0LCBjYWxsYmFjaykge1xuXG4gICAgY2NoTGFtYmRhTG9nZ2VyID0gbmV3IENDSExhbWJkYUxvZ2dlcihwcm9jZXNzLmVudi5TVEFHRV9QUkVGSVgsIHByb2Nlc3MuZW52LlJFR0lPTiwgcHJvY2Vzcy5lbnYuQUNDT1VOVCwgXG4gICAgICAgIHByb2Nlc3MuZW52LkNDSF9WRVJTSU9OLCBjb250ZXh0LCBwcm9jZXNzLmVudi5LSU5FU0lTX0VOQUJMRUQsIGV2ZW50LmlucHV0LmN1c3RvbWVyLmN1c3RvbWVyUHJlZml4LCBcbiAgICAgICAgZXZlbnQuaW5wdXQuY3VzdG9tZXIuem9uZSwgJycsICcnLCBldmVudC5pbnB1dC5jdXN0b20uRkNDSC5GQ0NIX0V4ZWN1dGlvbiwgZXZlbnQuaW5wdXQuY3VzdG9tLkZDQ0guRkNDSF9JbnB1dFsncHJvZHVjZXItaWQnXSk7XG5cbiAgICBjY2hMYW1iZGFMb2dnZXIubG9nKFwiSW5zaWRlIGdldFNpemUgbGFtYmRhXCIsIGV2ZW50KTtcblxuICAgIGNvbnN0IF9kYXRhID0gZXZlbnQuZGF0YTtcbiAgIFxuICAgIGNvbnN0IF9jb3VudCA9IF9kYXRhLnN0YWdlcy5sZW5ndGg7XG4gICAgY2NoTGFtYmRhTG9nZ2VyLmxvZyhcImNvdW50XCIsIF9jb3VudCk7XG4gICAgY29uc3QgX21lc3NhZ2UgPSBgU3RhZ2UgMSBvZiAke19jb3VudH0uIFN0YWdlOiAke19kYXRhLnN0YWdlc1swXS5zdGFnZX1gXG5cbiAgICBjYWxsYmFjayhudWxsLCB7XG4gICAgICAgIGN1cnJlbnRfc3RhZ2U6IF9tZXNzYWdlLFxuICAgICAgICBjb3VudDogX2NvdW50LFxuICAgICAgICBpbmRleDogMCxcbiAgICAgICAgc3RlcDogMVxuICAgIH0pXG4gIH0iXX0=